{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Election Results\n",
      "-------------------------\n",
      "Total Votes : 3521001\n",
      "-------------------------\n",
      "Correy :  20.0 % ( 704200 )\n",
      "O'Tooley :  3.0 % ( 105630 )\n",
      "Li :  14.0 % ( 492940 )\n",
      "Khan :  63.0 % ( 2218231 )\n",
      "-------------------------\n",
      "Winner:  Khan\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import csv\n",
    "csvpath = os.path.join(\"election_data.csv\")\n",
    "#csvpath \n",
    "#comment out the prints after verifying the path, header, etc.\n",
    "counterlist = []\n",
    "#I'm using a variable 'counterlist' where I can split and save the values of the different columns in each line or row after \n",
    "#the header\n",
    "with open(csvpath, \"r\", newline = \"\") as csvfile:\n",
    "    csvreader = csv.reader(csvfile, delimiter =\",\")\n",
    "    #print(csvreader)\n",
    "    csvheader = next(csvreader)\n",
    "    #print(f\"CSV Header : {csvheader}\") \n",
    "    rowscounter = 0\n",
    "    for rows in csvreader:\n",
    "     #   print(rows)\n",
    "        rowscounter = rowscounter + 1 #This is to count the lines as each month is in a line\n",
    "        counterlist.append([rowscounter, rows[0], rows[1], rows[2]])\n",
    "#print(counterlist)\n",
    "\n",
    "# processing the data now\n",
    "voterid = [variable[1] for variable in counterlist]       #this where I access the values of the first column index\n",
    "county = [variable[2] for variable in counterlist]\n",
    "candidatecolumn = [variable[3] for variable in counterlist]\n",
    "\n",
    "# to get the count of all the voter ID's, which will represent the total of votes casted\n",
    "#print(len(voterid)) \n",
    "\n",
    "#myset = set(candidate)\n",
    "#print(myset)\n",
    "#from the ptinting above, the canditates are: 'Correy', \"O'Tooley\", 'Li', 'Khan'\n",
    "#candidateslist = list(myset)\n",
    "#print(candidateslist)\n",
    "\n",
    "candidate1 = \"Correy\"\n",
    "candidate2 = \"O'Tooley\"\n",
    "candidate3 = \"Li\"\n",
    "candidate4 = \"Khan\"\n",
    "count1 = 0\n",
    "count2 = 0\n",
    "count3 = 0\n",
    "count4 = 0\n",
    "\n",
    "for candidate in candidatecolumn:\n",
    "    if  candidate == candidate1:\n",
    "        count1 = count1 + 1\n",
    "    elif candidate == candidate2 :\n",
    "         count2 = count2 + 1\n",
    "    elif candidate == candidate3 :\n",
    "         count3 = count3 + 1\n",
    "    elif candidate == candidate4 :\n",
    "         count4 = count4 + 1\n",
    "            \n",
    "c1percent = round((count1 / len(voterid)) * 100, 2)\n",
    "c2percent = round((count2 / len(voterid)) * 100, 2)\n",
    "c3percent = round((count3 / len(voterid)) * 100, 2)\n",
    "c4percent = round((count4 / len(voterid)) * 100, 2)\n",
    "\n",
    "if count1 > count2 and count1 > count3 and count1 > count4:\n",
    "    winner = candidate1\n",
    "elif count2 > count1 and count2 > count3 and count2 > count4:\n",
    "     winner = candidate2\n",
    "elif count3 > count1 and count3 > count2 and count3 > count4:\n",
    "     winner = candidate3\n",
    "elif count4 > count1 and count4 > count2 and count4 > count3:\n",
    "     winner = candidate4\n",
    "            \n",
    "print(\"Election Results\")\n",
    "print(\"-------------------------\")\n",
    "print(\"Total Votes :\", len((voterid)))\n",
    "print(\"-------------------------\")    \n",
    "print(candidate1, \": \", c1percent, \"% (\", count1, \")\")\n",
    "print(candidate2, \": \", c2percent, \"% (\", count2, \")\")\n",
    "print(candidate3, \": \", c3percent, \"% (\", count3, \")\")\n",
    "print(candidate4, \": \", c4percent, \"% (\", count4, \")\")\n",
    "print(\"-------------------------\")\n",
    "print(\"Winner: \", winner)\n",
    "\n",
    "csvoutputh = os.path.join(\"poll_results.csv\")\n",
    "with open(csvoutputh, \"w\", newline = \"\") as csvfile:\n",
    "    csvwriter = csv.writer(csvfile, delimiter = \",\")\n",
    "    csvwriter.writerow([\"Election Results\"])\n",
    "    csvwriter.writerow([\"Total Votes\", (len(voterid))])\n",
    "    csvwriter.writerow([candidate1, \": \", c1percent, \"% (\", count1, \")\"])\n",
    "    csvwriter.writerow([candidate2, \": \", c2percent, \"% (\", count2, \")\"])\n",
    "    csvwriter.writerow([candidate3, \": \", c3percent, \"% (\", count3, \")\"])\n",
    "    csvwriter.writerow([candidate4, \": \", c4percent, \"% (\", count4, \")\"])\n",
    "    csvwriter.writerow([\"Winner: \", winner])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Conda [PythonData]",
   "language": "python",
   "name": "pythondata"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
